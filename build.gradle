plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.107'
}

version = "2.5.6"
group = "dev.gigaherz.signbutton"

Provider<String> minecraftVersion(Transformer<String, String> mapper) {
    return project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion).map(mapper)
}

base {
    archivesName = minecraftVersion { "SignButton-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.tterrag.com/'
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        workingDirectory project.file('run')

        modSource project.sourceSets.main
    }

    client {
    }

    server {
    }

    data {
        programArguments.addAll '--mod', 'signbutton', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

subsystems {
    parchment {
        minecraftVersion="1.20.4"
        mappingsVersion="2024.04.14"
    }
}

dependencies {
    implementation 'net.neoforged:neoforge:20.5.3-beta'
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "signbutton",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}